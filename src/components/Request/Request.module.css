.request {
  position: relative;
  display: grid;
  place-items: center;
  overflow: hidden;
  padding: 3rem;
}

.particlesCanvas {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.content {
  position: relative;
  z-index: 2;
  width: 100%;
  max-width: 600px;
}

.formCard {
  background: linear-gradient(
    145deg,
    rgba(255, 255, 255, 0.03) 0%,
    rgba(255, 255, 255, 0.01) 100%
  );
  border: 1px solid rgba(255, 255, 255, 0.05);
  border-radius: var(--bento-radius);
  padding: 3rem;
  position: relative;
  overflow: hidden;
  backdrop-filter: blur(10px);
  z-index: 3;
}
[data-theme="light"] .formCard {
  background: #F0F0E8 !important;
  border: 1px solid rgba(153, 98, 0, 0.1) !important;
  box-shadow: 0 1px 3px rgba(153, 98, 0, 0.1), 0 1px 2px rgba(153, 98, 0, 0.06) !important;
}

.title {
  font-size: 3rem;
  font-weight: 800;
  text-align: center;
  margin-bottom: 3rem;
  color: var(--text);
  font-family: 'Involve', sans-serif;
}
.gradientText {
  background: linear-gradient(135deg, var(--primary) 0%, var(--accent) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.form {
  position: relative;
  z-index: 2;
}

.inputWrapper {
  position: relative;
  margin-bottom: 2rem;
}

.input {
  width: 100%;
  padding: 1.25rem;
  margin-top: 1rem;
  background: rgba(255, 255, 255, 0.15);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--bento-radius);
  color: var(--text);
  font-size: 1.125rem;
  transition: all 0.3s ease;
  box-sizing: border-box;
}
[data-theme="light"] .input {
  background: #FFF !important;
}

.input:focus {
  outline: none;
  border-color: var(--primary);
  background: rgba(255, 255, 255, 0.05);
}

.inputGlow {
  position: absolute;
  inset: 0;
  border-radius: var(--bento-radius);
  background: radial-gradient(
    circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
    rgba(153, 98, 0, 0.15),
    transparent 70%
  );
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.input:focus + .inputGlow {
  opacity: 1;
}

.submitButton {
  width: 100%;
  padding: 1.25rem;
  background: linear-gradient(135deg, var(--primary) 0%, var(--accent) 100%);
  border: none;
  border-radius: var(--bento-radius);
  color: white;
  font-size: 1.125rem;
  font-weight: 600;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.buttonText {
  position: relative;
  z-index: 2;
  font-family: 'Inter', sans-serif;
}

.buttonGlow {
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
    rgba(255, 255, 255, 0.2),
    transparent 70%
  );
  opacity: 0;
  transition: opacity 0.3s ease;
}

.submitButton:hover .buttonGlow {
  opacity: 1;
}

/* AI Animation */
.aiAnimation {
  position: absolute;
  inset: 0;
  pointer-events: none;
}

.pulse {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 200px;
  height: 200px;
  background: radial-gradient(
    circle at center,
    rgba(153, 98, 0, 0.1),
    transparent 70%
  );
  border-radius: 50%;
  animation: pulse 4s ease-in-out infinite;
}

.neurons {
  position: absolute;
  inset: 0;
}

.neuron {
  position: absolute;
  width: 4px;
  height: 4px;
  background: var(--primary);
  border-radius: 50%;
  opacity: 0.3;
  animation: float var(--duration) ease-in-out infinite;
  animation-delay: var(--delay);
}

@keyframes pulse {
  0%, 100% { transform: translate(-50%, -50%) scale(1); opacity: 0.5; }
  50% { transform: translate(-50%, -50%) scale(1.2); opacity: 0.8; }
}

@keyframes float {
  0%, 100% { transform: translate(0, 0); }
  50% { transform: translate(20px, -20px); }
}

/* Адаптивность */
@media (max-width: 768px) {
  .formCard {
    padding: 2rem;
  }

  .title {
    font-size: 2rem;
    margin-bottom: 2rem;
  }
}

.floatingData {
  position: absolute;
  inset: 0;
  pointer-events: none;
  perspective: 1000px;
  transform-style: preserve-3d;
}

.dataPoint {
  position: absolute;
  padding: 0.5rem 1rem;
  background: linear-gradient(
    145deg,
    rgba(255, 255, 255, 0.05) 0%,
    rgba(255, 255, 255, 0.02) 100%
  );
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  color: var(--text-light);
  white-space: nowrap;
  animation: float var(--float-duration) ease-in-out infinite;
  animation-delay: var(--float-delay);
  transform-style: preserve-3d;
}

/* Увеличим разницу в размерах */
.dataPoint.xl {
  font-size: 1.75rem;
  font-weight: 700;
  background: linear-gradient(135deg, var(--primary) 0%, var(--accent) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  padding: 1rem 2rem;
}

.dataPoint.lg {
  font-size: 1.35rem;
  font-weight: 600;
  background: linear-gradient(135deg, var(--primary) 0%, var(--accent) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.dataPoint.md {
  font-size: 1.1rem;
  opacity: 0.8;
}

.dataPoint.sm {
  font-size: 0.9rem;
  opacity: 0.5;
}

.dataPoint.xs {
  font-size: 0.75rem;
  opacity: 0.3;
}

/* Увеличим разницу в глубине */
.depth1 {
  transform: translateZ(40px);
}

.depth2 {
  transform: translateZ(10px);
}

.depth3 {
  transform: translateZ(-20px);
}

.depth4 {
  transform: translateZ(-40px);
}

/* Усилим эффект размытия */
.depth2 {
  filter: blur(1px);
}

.depth3 {
  filter: blur(2px);
}

.depth4 {
  filter: blur(3px);
}

/* Добавим свечение только для крупных элементов */
.dataPoint.xl::after,
.dataPoint.lg::after {
  content: '';
  position: absolute;
  inset: -10px;
  background: radial-gradient(
    circle at center,
    rgba(153, 98, 0, 0.2),
    transparent 70%
  );
  border-radius: 12px;
  z-index: -1;
}

.dataPoint.xl::after {
  inset: -15px;
  background: radial-gradient(
    circle at center,
    rgba(153, 98, 0, 0.3),
    transparent 70%
  );
}

/* Обновим анимацию для более выраженного движения */
@keyframes float {
  0%, 100% {
    transform: translate3d(0, 0, 0) rotate(0deg);
  }
  25% {
    transform: translate3d(15px, -15px, 10px) rotate(3deg);
  }
  50% {
    transform: translate3d(0, -30px, 20px) rotate(-2deg);
  }
  75% {
    transform: translate3d(-15px, -15px, 10px) rotate(2deg);
  }
}

/* Адаптивность для плавающих данных */
@media (max-width: 768px) {
  .floatingData {
    display: none;
  }
} 